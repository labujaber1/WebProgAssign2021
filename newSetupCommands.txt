commands to setup a django project via cwa week3

pip --> command used to install packages
    lots of packages Scipy, matplotlib, pandas, numpy
>python --> check have python if not install on pc
>pip install django==3.0.3 --> check django
>python -m venv env_projectname --> create virtual enviroment
>./env_projectname.Scripts/activate
>django-admin startproject <projectname>
will create base folder and sub folder the same
rename base folder avoid confusion
go to projectname directory
>python manage.py runserver --> to check connection should open in browser
ctl-click on address 127.0.0.1:8000 on command line and will open browser successful
>python manage.py startapp <appname> --> create app same directory level as manage.py
enter app name in settings.py under installed apps
Add URL path in project\url.py
import experience.views

urlpatterns = [
    path('admin/', admin.site.urls),
    path('experience',<appname>.views.<nameofdefinviews>, name='<nameofdefinviews>')
]
## second experience is name of def in views ##

create templates folder and add home.html file
in views.py add -->
def <name>(request):
    return render(request, 'home.html’)

check it works runserver should see html page
can run migrations even if models empty

-- taken from slides wk5 creating portfolio -- 
Create python class for this in appname\models.py
Will allow add club in admin page when runserver when create static/image folder

class Job(models.Model):
    # Image - with folder to upload the image to
    image = models.ImageField(upload_to='images/')
    # Summary
    summary = models.CharField(max_length=200)
    def __str__(self):
        return self.summary ##is string rep of class like tostring
install Pillow -->
>python -m pip install Pillow

### if ready to create schema can add stuff via admin page instead ####
model is implemented as set of python classes which then create 
database schema. Enter models.py a 
class <name>(models.Model): 
    name = models.CharField(max_length=30)
    etc
##include foreign key from other schema created if required
    vaccinations=models.ManyToManyField("Vaccine",blank=True)


class Vaccine(models.Model):
    name = models.CharField(max_length=30)

creating,adding,removing etc database
>python manage.py makemigrations
>python manage.py showmigrations
>python manage.py migrate


may need to delete database if changes later but message will inform
can view db if install sqlite
can also create .csv file and upload check uncle google
admin.py used to manually add data to db via browser
    after migrations 
    create password >python manage.py createsuperuser
    enter name,password 
    in admin.py import class from app name
    at top enter 'from.models import <class name of model in models.py>
    enter @admin.register(class name above)
        pass 

    or wk5 create Job exercise
    edit admin.py add -->
    from .models import <namedef>
    admin.sit.register(<namedef>)
        #just use for now will later change check runserver

        
 @admin.register(ClubType)
class ClubTypeAdmin(admin.ModelAdmin):
    list_display = ['productName','clubType','size','productPrice']

in settings folder add -->
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR,'static')

MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR   
 ##check week4 django templates

