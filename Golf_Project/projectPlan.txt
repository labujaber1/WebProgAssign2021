1. create github repos
2. clone to laptop
3. create django menv project
4. create django app and add to settings
5. add url path
6. create templates folder and add home.html
7. add to views
TEST --> PASSED
8. create class models in models
9. makemigrations, migrate
10. make superuser
TEST --> PASSED
11. install Pillow
12. add classes to admin
13. add static to settings
test --> PASSED
14. design base.html
15. design home.html
     
16. design footer and header.html and add to home as block content
16.1 - display model data in list form get images later
TEST --> PASSED
17. create forms for fitting regist, new customer, GENERAL ENQUIRY 
    all as .html and call as block content in home.html
TEST --> PASSED
18. connect to database 
18.1 - TEST UNIT METHODS
18.2 - RUN --> 
19. store all data to db 
19.1 create insert
19.2 - TEST UNIT METHODS
        RUN --> 

20. 
create search product
create add product,admin login in html --> passed
add images for display products etc
#get nav method to go back and forth like tree thingy


html pages
base
home
navbar

forms views.py
def placeOrder(request):
    customer= Customer.objects.all()
    form=createorderform(instance=customer)
    if(request.method=='POST'):
        form=createorderform(request.POST,instance=customer)
        if(form.is_valid()):
            form.save()
            return redirect('/')
    context={'form':form}
    return render(request,"placeOrder.html",context)
 
def addClub(request):
    form=createproductform()
    if(request.method=='POST'):
        form=createproductform(request.POST,request.FILES)
        if(form.is_valid()):
            form.save()
            return redirect('/')
    context={'form':form}
    return render(request,"/addClub.html",context)
 
def registerPage(request):
    if request.user.is_authenticated:
        return redirect('home') 
    else: 
        form=createuserform()
        customerform=createcustomerform()
        if request.method=='POST':
            form=createuserform(request.POST)
            customerform=createcustomerform(request.POST)
            if form.is_valid() and customerform.is_valid():
                user=form.save()
                customer=customerform.save(commit=False)
                customer.user=user 
                customer.save()
                return redirect('login')
        context={
            'form':form,
            'customerform':customerform,
        }
        return render(request,"/register.html",context)
 
def loginPage(request):
    if request.user.is_authenticated:
        return redirect('home')
    else:
       if request.method=="POST":
        username=request.POST.get('username')
        password=request.POST.get('password')
        user=authenticate(request,username=username,password=password)
        if user is not None:
            login(request,user)
            return redirect('/')
       context={}
       return render(request,"/login.html",context)
 
def logoutPage(request):
    logout(request)
    return redirect('/')

urls.py
path('placeOrder', golfshop.views.placeOrder,name='placeOrder'),
path('login', golfshop.views.loginPage,name='login'),
path('logout', golfshop.views.logoutPage,name='logout'),
path('register', golfshop.views.registerPage,name='register'),
path('addClub', golfshop.views.addClub,name='addClub') 

form.py
class createuserform(UserCreationForm):
    class Meta:
        model=User
        fields=['username','password'] 
 
class createorderform(ModelForm):
    class Meta:
        model=orderForm
        fields="__all__"
        exclude=['status']
 
class createproductform(ModelForm):
    class Meta:
        model=Club
        fields='__all__'
 
class createcustomerform(ModelForm):
    class Meta:
        model=Customer
        fields='__all__'
        exclude=['user']

/login.html
{% extends 'Base.html' %}
{% load static%}
{% block content %}
<div class="container jumbotron">
    <form method="POST" action="">
        {% csrf_token %}
        <p><input type="text" name="username" placeholder="Username..."></p>
        <p><input type="password" name="password" placeholder="Password..." ></p>
        <input class="btn btn-success" type="submit" value="Login">
        <p>Do not have an account  <a href="{% url 'register' %}">Register</a></p>
    </form>
</div>
{% endblock %}


models
class OrderForm(models.Model):
    customer = models.ForeignKey(Customer, null=True, on_delete=models.SET_NULL)
    club_product = models.ForeignKey(Club, null=True, on_delete=SET_NULL)
    orderDate = models.DateTimeField(auto_now_add=True)
    orderStatus = models.CharField(max_length=10, default='Unpaid')
    def __str__(self):
        return self.customer  

        class BookFittingForm(models.Model):
    BFcustomer = models.ForeignKey(Customer, null=True, on_delete=models.SET_NULL)
    BFproduct = models.ForeignKey(Club, null=True, on_delete=SET_NULL)
    fittingDate = models.DateTimeField(auto_now_add=True)
    fittingStatus = models.CharField(max_length=10, default='Pending')
    def __str__(self):
        return self.customer

   